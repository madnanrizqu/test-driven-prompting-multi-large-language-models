from llm_output import solve_problem


def check(candidate):
    assert solve_problem("3 \nB\nc\nD") == "BattleShip\nCruiser\nDestroyer\n"
    assert solve_problem("3 \nC\nc\nD") == "Cruiser\nCruiser\nDestroyer\n"
    assert solve_problem("3 \nB\nc\nC") == "BattleShip\nCruiser\nCruiser\n"
    assert solve_problem("3 \nB\nc\nB") == "BattleShip\nCruiser\nBattleShip\n"
    assert solve_problem("3 \nC\nc\nB") == "Cruiser\nCruiser\nBattleShip\n"
    assert solve_problem("3 \nC\nb\nB") == "Cruiser\nBattleShip\nBattleShip\n"
    assert solve_problem("3 \nB\nd\nD") == "BattleShip\nDestroyer\nDestroyer\n"
    assert solve_problem("3 \nC\nd\nD") == "Cruiser\nDestroyer\nDestroyer\n"
    assert solve_problem("3 \nB\nd\nC") == "BattleShip\nDestroyer\nCruiser\n"
    assert solve_problem("3 \nC\nd\nB") == "Cruiser\nDestroyer\nBattleShip\n"
    assert solve_problem("3 \nD\nc\nB") == "Destroyer\nCruiser\nBattleShip\n"
    assert solve_problem("3 \nD\nc\nD") == "Destroyer\nCruiser\nDestroyer\n"
    assert solve_problem("3 \nC\nd\nC") == "Cruiser\nDestroyer\nCruiser\n"
    assert solve_problem("3 \nD\nb\nB") == "Destroyer\nBattleShip\nBattleShip\n"
    assert solve_problem("3 \nD\nb\nD") == "Destroyer\nBattleShip\nDestroyer\n"
    assert solve_problem("3 \nB\nc\nF") == "BattleShip\nCruiser\nFrigate\n"
    assert solve_problem("3 \nB\nb\nB") == "BattleShip\nBattleShip\nBattleShip\n"
    assert solve_problem("3 \nD\nd\nB") == "Destroyer\nDestroyer\nBattleShip\n"
    assert solve_problem("3 \nD\nd\nD") == "Destroyer\nDestroyer\nDestroyer\n"
    assert solve_problem("3 \nD\nd\nC") == "Destroyer\nDestroyer\nCruiser\n"
    assert solve_problem("3 \nD\nc\nC") == "Destroyer\nCruiser\nCruiser\n"
    assert solve_problem("3 \nD\nb\nC") == "Destroyer\nBattleShip\nCruiser\n"
    assert solve_problem("3 \nC\nc\nC") == "Cruiser\nCruiser\nCruiser\n"
    assert solve_problem("3 \nB\nb\nC") == "BattleShip\nBattleShip\nCruiser\n"
    assert solve_problem("3 \nC\nb\nC") == "Cruiser\nBattleShip\nCruiser\n"
    assert solve_problem("3 \nB\nb\nD") == "BattleShip\nBattleShip\nDestroyer\n"
    assert solve_problem("3 \nB\nd\nB") == "BattleShip\nDestroyer\nBattleShip\n"
    assert solve_problem("3 \nB\nf\nD") == "BattleShip\nFrigate\nDestroyer\n"
    assert solve_problem("3 \nB\nd\nF") == "BattleShip\nDestroyer\nFrigate\n"
    assert solve_problem("3 \nC\nb\nD") == "Cruiser\nBattleShip\nDestroyer\n"
    assert solve_problem("3 \nC\nf\nD") == "Cruiser\nFrigate\nDestroyer\n"
    assert solve_problem("3 \nC\nf\nC") == "Cruiser\nFrigate\nCruiser\n"
    assert solve_problem("3 \nB\nf\nC") == "BattleShip\nFrigate\nCruiser\n"
    assert solve_problem("3 \nD\nb\nF") == "Destroyer\nBattleShip\nFrigate\n"
    assert solve_problem("3 \nC\nf\nB") == "Cruiser\nFrigate\nBattleShip\n"
    assert solve_problem("3 \nD\nc\nF") == "Destroyer\nCruiser\nFrigate\n"
    assert solve_problem("3 \nF\nc\nD") == "Frigate\nCruiser\nDestroyer\n"
    assert solve_problem("3 \nB\nb\nF") == "BattleShip\nBattleShip\nFrigate\n"
    assert solve_problem("3 \nC\nd\nF") == "Cruiser\nDestroyer\nFrigate\n"
    assert solve_problem("3 \nB\nf\nB") == "BattleShip\nFrigate\nBattleShip\n"
    assert solve_problem("3 \nD\nf\nB") == "Destroyer\nFrigate\nBattleShip\n"
    assert solve_problem("3 \nD\nf\nD") == "Destroyer\nFrigate\nDestroyer\n"
    assert solve_problem("3 \nD\nd\nF") == "Destroyer\nDestroyer\nFrigate\n"
    assert solve_problem("3 \nD\nf\nC") == "Destroyer\nFrigate\nCruiser\n"
    assert solve_problem("3 \nC\nb\nF") == "Cruiser\nBattleShip\nFrigate\n"
    assert solve_problem("3 \nC\nc\nF") == "Cruiser\nCruiser\nFrigate\n"
    assert solve_problem("3 \nF\nd\nD") == "Frigate\nDestroyer\nDestroyer\n"
    assert solve_problem("3 \nF\nc\nC") == "Frigate\nCruiser\nCruiser\n"
    assert solve_problem("3 \nF\nc\nF") == "Frigate\nCruiser\nFrigate\n"
    assert solve_problem("3 \nF\nd\nC") == "Frigate\nDestroyer\nCruiser\n"
    assert solve_problem("3 \nF\nb\nD") == "Frigate\nBattleShip\nDestroyer\n"
    assert solve_problem("3 \nF\nd\nB") == "Frigate\nDestroyer\nBattleShip\n"
    assert solve_problem("3 \nF\nb\nF") == "Frigate\nBattleShip\nFrigate\n"
    assert solve_problem("3 \nF\nf\nB") == "Frigate\nFrigate\nBattleShip\n"
    assert solve_problem("3 \nC\nf\nF") == "Cruiser\nFrigate\nFrigate\n"
    assert solve_problem("3 \nD\nf\nF") == "Destroyer\nFrigate\nFrigate\n"
    assert solve_problem("3 \nB\nf\nF") == "BattleShip\nFrigate\nFrigate\n"
    assert solve_problem("3 \nF\nf\nC") == "Frigate\nFrigate\nCruiser\n"
    assert solve_problem("3 \nF\nc\nB") == "Frigate\nCruiser\nBattleShip\n"
    assert solve_problem("3 \nF\nd\nF") == "Frigate\nDestroyer\nFrigate\n"
    assert solve_problem("3 \nF\nb\nB") == "Frigate\nBattleShip\nBattleShip\n"
    assert solve_problem("3 \nF\nb\nC") == "Frigate\nBattleShip\nCruiser\n"
    assert solve_problem("3 \nF\nf\nD") == "Frigate\nFrigate\nDestroyer\n"
    assert solve_problem("3 \nF\nf\nF") == "Frigate\nFrigate\nFrigate\n"


check(solve_problem)